[0.000000] (-) TimerEvent: {}
[0.000194] (pcl_example) JobQueued: {'identifier': 'pcl_example', 'dependencies': OrderedDict()}
[0.000217] (pcl_example) JobStarted: {'identifier': 'pcl_example'}
[0.006570] (pcl_example) JobProgress: {'identifier': 'pcl_example', 'progress': 'cmake'}
[0.007628] (pcl_example) JobProgress: {'identifier': 'pcl_example', 'progress': 'build'}
[0.007686] (pcl_example) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ws/src/pcl_example/build/pcl_example', '--', '-j20', '-l20'], 'cwd': '/home/ws/src/pcl_example/build/pcl_example', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('HOSTNAME', 'boragunes'), ('GIT_ASKPASS', '/vscode/vscode-server/bin/linux-x64/b1c0a14de1414fcdaa400695b4db1c0799bc3124/extensions/git/dist/askpass.sh'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/vscode/vscode-server/bin/linux-x64/b1c0a14de1414fcdaa400695b4db1c0799bc3124/bin/helpers/browser.sh'), ('HOME', '/home/boragunes'), ('TERM_PROGRAM_VERSION', '1.92.0'), ('VSCODE_IPC_HOOK_CLI', '/tmp/vscode-ipc-7e5bfd0b-d03b-4e94-82fc-e10c9de64056.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/vscode/vscode-server/bin/linux-x64/b1c0a14de1414fcdaa400695b4db1c0799bc3124/extensions/git/dist/askpass-main.js'), ('VSCODE_GIT_ASKPASS_NODE', '/vscode/vscode-server/bin/linux-x64/b1c0a14de1414fcdaa400695b4db1c0799bc3124/node'), ('COLORTERM', 'truecolor'), ('REMOTE_CONTAINERS', 'true'), ('_colcon_cd_root', '/opt/ros/humble/'), ('COLCON_PREFIX_PATH', '/home/ws/src/pcl_example/install'), ('ROS_DISTRO', 'humble'), ('REMOTE_CONTAINERS_IPC', '/tmp/vscode-remote-containers-ipc-c745513c-920e-4115-ad8d-e5a4edcb0ff3.sock'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('ROS_LOCALHOST_ONLY', '1'), ('PATH', '/vscode/vscode-server/bin/linux-x64/b1c0a14de1414fcdaa400695b4db1c0799bc3124/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('RCLCPP_LOG_LEVEL', 'INFO'), ('REMOTE_CONTAINERS_SOCKETS', '["/tmp/vscode-ssh-auth-c745513c-920e-4115-ad8d-e5a4edcb0ff3.sock","/home/boragunes/.gnupg/S.gpg-agent"]'), ('DISPLAY', ':1'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/tmp/vscode-git-d9ed358602.sock'), ('TERM_PROGRAM', 'vscode'), ('SSH_AUTH_SOCK', '/tmp/vscode-ssh-auth-c745513c-920e-4115-ad8d-e5a4edcb0ff3.sock'), ('ROS_DOMAIN_ID', '42'), ('AMENT_PREFIX_PATH', '/home/ws/src/pcl_example/install/pcl_example:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('PWD', '/home/ws/src/pcl_example/build/pcl_example'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/ws/src/pcl_example/install/pcl_example:/opt/ros/humble')]), 'shell': False}
[0.071041] (pcl_example) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target pcl_example_node\x1b[0m\n'}
[0.090577] (pcl_example) StdoutLine: {'line': b'[ 33%] \x1b[32mBuilding CXX object CMakeFiles/pcl_example_node.dir/src/pcl_example.cpp.o\x1b[0m\n'}
[0.099562] (-) TimerEvent: {}
[0.199785] (-) TimerEvent: {}
[0.300095] (-) TimerEvent: {}
[0.400404] (-) TimerEvent: {}
[0.500658] (-) TimerEvent: {}
[0.601002] (-) TimerEvent: {}
[0.701221] (-) TimerEvent: {}
[0.801507] (-) TimerEvent: {}
[0.901727] (-) TimerEvent: {}
[1.001981] (-) TimerEvent: {}
[1.102357] (-) TimerEvent: {}
[1.202669] (-) TimerEvent: {}
[1.302918] (-) TimerEvent: {}
[1.403254] (-) TimerEvent: {}
[1.503610] (-) TimerEvent: {}
[1.603931] (-) TimerEvent: {}
[1.704248] (-) TimerEvent: {}
[1.804565] (-) TimerEvent: {}
[1.904880] (-) TimerEvent: {}
[2.005091] (-) TimerEvent: {}
[2.105406] (-) TimerEvent: {}
[2.205697] (-) TimerEvent: {}
[2.305960] (-) TimerEvent: {}
[2.406431] (-) TimerEvent: {}
[2.506693] (-) TimerEvent: {}
[2.606999] (-) TimerEvent: {}
[2.707341] (-) TimerEvent: {}
[2.807678] (-) TimerEvent: {}
[2.908020] (-) TimerEvent: {}
[3.008402] (-) TimerEvent: {}
[3.108732] (-) TimerEvent: {}
[3.209092] (-) TimerEvent: {}
[3.246825] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ws/src/pcl_example/src/pcl_example.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Pcl_Example::topic_callback(sensor_msgs::msg::PointCloud2_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.246993] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ws/src/pcl_example/src/pcl_example.cpp:78:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KVoxelGrid\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kpcl\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.247036] (pcl_example) StderrLine: {'line': b'   78 |     pcl::\x1b[01;31m\x1b[KVoxelGrid\x1b[m\x1b[K<pcl::PointXYZ> voxel_grid;\n'}
[3.247067] (pcl_example) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[3.247098] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ws/src/pcl_example/src/pcl_example.cpp:78:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K>\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[3.247128] (pcl_example) StderrLine: {'line': b'   78 |     pcl::VoxelGrid<pcl::PointXYZ\x1b[01;31m\x1b[K>\x1b[m\x1b[K voxel_grid;\n'}
[3.247155] (pcl_example) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[3.254800] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ws/src/pcl_example/src/pcl_example.cpp:78:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kvoxel_grid\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[3.255038] (pcl_example) StderrLine: {'line': b'   78 |     pcl::VoxelGrid<pcl::PointXYZ> \x1b[01;31m\x1b[Kvoxel_grid\x1b[m\x1b[K;\n'}
[3.255087] (pcl_example) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.255121] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ws/src/pcl_example/src/pcl_example.cpp:86:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[KfromPCL(std::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type&, sensor_msgs::msg::PointCloud2&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.255153] (pcl_example) StderrLine: {'line': b'   86 |     \x1b[01;31m\x1b[Kpcl_conversions::fromPCL(*cloud_xyz_filtered, cloud_out)\x1b[m\x1b[K;\n'}
[3.255182] (pcl_example) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.255353] (pcl_example) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ws/src/pcl_example/src/pcl_example.cpp:30\x1b[m\x1b[K:\n'}
[3.255451] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:82:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const uint64_t&, rclcpp::Time&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.255483] (pcl_example) StderrLine: {'line': b'   82 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const std::uint64_t &pcl_stamp, rclcpp::Time &stamp)\n'}
[3.255514] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.255543] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:82:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst uint64_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst long unsigned int&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[3.255573] (pcl_example) StderrLine: {'line': b'   82 |   void fromPCL(\x1b[01;36m\x1b[Kconst std::uint64_t &pcl_stamp\x1b[m\x1b[K, rclcpp::Time &stamp)\n'}
[3.255606] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[3.255668] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:94:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Time pcl_conversions::fromPCL(const uint64_t&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.255697] (pcl_example) StderrLine: {'line': b'   94 |   rclcpp::Time \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const std::uint64_t &pcl_stamp)\n'}
[3.255725] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.255751] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:94:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[3.255778] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:112:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::PCLHeader&, std_msgs::msg::Header&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.255805] (pcl_example) StderrLine: {'line': b'  112 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PCLHeader &pcl_header, std_msgs::msg::Header &header)\n'}
[3.255830] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.255855] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:112:38:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::PCLHeader&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.255888] (pcl_example) StderrLine: {'line': b'  112 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::PCLHeader &pcl_header\x1b[m\x1b[K, std_msgs::msg::Header &header)\n'}
[3.255914] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[3.255940] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:131:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Header pcl_conversions::fromPCL(const pcl::PCLHeader&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.255972] (pcl_example) StderrLine: {'line': b'  131 |   std_msgs::msg::Header \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PCLHeader &pcl_header)\n'}
[3.255998] (pcl_example) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256024] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:131:25:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 1 argument, 2 provided\n'}
[3.256050] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:160:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::PCLImage&, sensor_msgs::msg::Image&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256077] (pcl_example) StderrLine: {'line': b'  160 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PCLImage &pcl_image, sensor_msgs::msg::Image &image)\n'}
[3.256104] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256130] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:160:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::PCLImage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256160] (pcl_example) StderrLine: {'line': b'  160 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::PCLImage &pcl_image\x1b[m\x1b[K, sensor_msgs::msg::Image &image)\n'}
[3.256186] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[3.256212] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:201:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::PCLPointField&, sensor_msgs::msg::PointField&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256238] (pcl_example) StderrLine: {'line': b'  201 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PCLPointField &pcl_pf, sensor_msgs::msg::PointField &pf)\n'}
[3.256264] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256289] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:201:42:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::PCLPointField&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256316] (pcl_example) StderrLine: {'line': b'  201 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::PCLPointField &pcl_pf\x1b[m\x1b[K, sensor_msgs::msg::PointField &pf)\n'}
[3.256342] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[3.256369] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:210:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const std::vector<pcl::PCLPointField>&, std::vector<sensor_msgs::msg::PointField_<std::allocator<void> >, std::allocator<sensor_msgs::msg::PointField_<std::allocator<void> > > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256396] (pcl_example) StderrLine: {'line': b'  210 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const std::vector<pcl::PCLPointField> &pcl_pfs, std::vector<sensor_msgs::msg::PointField> &pfs)\n'}
[3.256425] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256450] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:210:55:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<pcl::PCLPointField>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256477] (pcl_example) StderrLine: {'line': b'  210 |   void fromPCL(\x1b[01;36m\x1b[Kconst std::vector<pcl::PCLPointField> &pcl_pfs\x1b[m\x1b[K, std::vector<sensor_msgs::msg::PointField> &pfs)\n'}
[3.256504] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.256530] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:256:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::PCLPointCloud2&, sensor_msgs::msg::PointCloud2&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256565] (pcl_example) StderrLine: {'line': b'  256 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PCLPointCloud2 &pcl_pc2, sensor_msgs::msg::PointCloud2 &pc2)\n'}
[3.256589] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256613] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:256:43:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::PCLPointCloud2&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256642] (pcl_example) StderrLine: {'line': b'  256 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::PCLPointCloud2 &pcl_pc2\x1b[m\x1b[K, sensor_msgs::msg::PointCloud2 &pc2)\n'}
[3.256668] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[3.256693] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:299:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::PointIndices&, pcl_msgs::msg::PointIndices&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256718] (pcl_example) StderrLine: {'line': b'  299 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PointIndices &pcl_pi, pcl_msgs::msg::PointIndices &pi)\n'}
[3.256743] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256769] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:299:41:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::PointIndices&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256796] (pcl_example) StderrLine: {'line': b'  299 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::PointIndices &pcl_pi\x1b[m\x1b[K, pcl_msgs::msg::PointIndices &pi)\n'}
[3.256821] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[3.256846] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:329:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::ModelCoefficients&, pcl_msgs::msg::ModelCoefficients&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256873] (pcl_example) StderrLine: {'line': b'  329 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::ModelCoefficients &pcl_mc, pcl_msgs::msg::ModelCoefficients &mc)\n'}
[3.256898] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.256922] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:329:46:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::ModelCoefficients&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.256950] (pcl_example) StderrLine: {'line': b'  329 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::ModelCoefficients &pcl_mc\x1b[m\x1b[K, pcl_msgs::msg::ModelCoefficients &mc)\n'}
[3.256976] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[3.257006] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:374:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::Vertices&, pcl_msgs::msg::Vertices&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257034] (pcl_example) StderrLine: {'line': b'  374 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::Vertices &pcl_vert, pcl_msgs::msg::Vertices &vert)\n'}
[3.257062] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.257089] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:374:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::Vertices&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257115] (pcl_example) StderrLine: {'line': b'  374 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::Vertices &pcl_vert\x1b[m\x1b[K, pcl_msgs::msg::Vertices &vert)\n'}
[3.257143] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.257169] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:380:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const std::vector<pcl::Vertices>&, std::vector<pcl_msgs::msg::Vertices_<std::allocator<void> >, std::allocator<pcl_msgs::msg::Vertices_<std::allocator<void> > > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257200] (pcl_example) StderrLine: {'line': b'  380 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const std::vector<pcl::Vertices> &pcl_verts, std::vector<pcl_msgs::msg::Vertices> &verts)\n'}
[3.257228] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.257255] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:380:50:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::vector<pcl::Vertices>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257284] (pcl_example) StderrLine: {'line': b'  380 |   void fromPCL(\x1b[01;36m\x1b[Kconst std::vector<pcl::Vertices> &pcl_verts\x1b[m\x1b[K, std::vector<pcl_msgs::msg::Vertices> &verts)\n'}
[3.257312] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[3.257340] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:397:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(std::vector<pcl::Vertices>&, std::vector<pcl_msgs::msg::Vertices_<std::allocator<void> >, std::allocator<pcl_msgs::msg::Vertices_<std::allocator<void> > > >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257371] (pcl_example) StderrLine: {'line': b'  397 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(std::vector<pcl::Vertices> &pcl_verts, std::vector<pcl_msgs::msg::Vertices> &verts)\n'}
[3.257398] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.257425] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:397:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<pcl::Vertices>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257453] (pcl_example) StderrLine: {'line': b'  397 |   void fromPCL(\x1b[01;36m\x1b[Kstd::vector<pcl::Vertices> &pcl_verts\x1b[m\x1b[K, std::vector<pcl_msgs::msg::Vertices> &verts)\n'}
[3.257486] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[3.257514] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:444:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid pcl_conversions::fromPCL(const pcl::PolygonMesh&, pcl_msgs::msg::PolygonMesh&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257542] (pcl_example) StderrLine: {'line': b'  444 |   void \x1b[01;36m\x1b[KfromPCL\x1b[m\x1b[K(const pcl::PolygonMesh &pcl_mesh, pcl_msgs::msg::PolygonMesh &mesh)\n'}
[3.257568] (pcl_example) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[3.257594] (pcl_example) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/pcl_conversions/pcl_conversions.h:444:40:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kpcl::PointCloud<pcl::PointXYZ>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst pcl::PolygonMesh&\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.257622] (pcl_example) StderrLine: {'line': b'  444 |   void fromPCL(\x1b[01;36m\x1b[Kconst pcl::PolygonMesh &pcl_mesh\x1b[m\x1b[K, pcl_msgs::msg::PolygonMesh &mesh)\n'}
[3.257652] (pcl_example) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.309281] (-) TimerEvent: {}
[3.409652] (-) TimerEvent: {}
[3.509873] (-) TimerEvent: {}
[3.610217] (-) TimerEvent: {}
[3.710598] (-) TimerEvent: {}
[3.810944] (-) TimerEvent: {}
[3.911274] (-) TimerEvent: {}
[4.011653] (-) TimerEvent: {}
[4.111894] (-) TimerEvent: {}
[4.212099] (-) TimerEvent: {}
[4.312450] (-) TimerEvent: {}
[4.412859] (-) TimerEvent: {}
[4.513194] (-) TimerEvent: {}
[4.613612] (-) TimerEvent: {}
[4.713848] (-) TimerEvent: {}
[4.814135] (-) TimerEvent: {}
[4.914415] (-) TimerEvent: {}
[5.014754] (-) TimerEvent: {}
[5.115071] (-) TimerEvent: {}
[5.215404] (-) TimerEvent: {}
[5.315762] (-) TimerEvent: {}
[5.349978] (pcl_example) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/pcl_example_node.dir/build.make:90: CMakeFiles/pcl_example_node.dir/src/pcl_example.cpp.o] Error 1\n'}
[5.350228] (pcl_example) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/pcl_example_node.dir/all] Error 2\n'}
[5.350300] (pcl_example) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[5.352548] (pcl_example) CommandEnded: {'returncode': 2}
[5.373675] (pcl_example) JobEnded: {'identifier': 'pcl_example', 'rc': 2}
[5.384059] (-) EventReactorShutdown: {}
